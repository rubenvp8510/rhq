<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.rhq</groupId>
    <artifactId>rhq-cassandra-ccm</artifactId>
    <version>4.12.0.JON330GA</version>
  </parent>

  <artifactId>rhq-cassandra-ccm-core</artifactId>
  <version>4.12.0.JON330GA-redhat-1</version>
  <name>RHQ Cassandra CCM Core</name>

  <properties>
    <local.repo>${settings.localRepository}</local.repo>
    <cassandra.jna.version>3.5.1</cassandra.jna.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>rhq-core-plugin-api</artifactId>
      <version>${rhq-core-plugin-api.version}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.cassandra</groupId>
      <artifactId>cassandra-thrift</artifactId>
      <version>${cassandra.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>net.java.dev.jna</groupId>
      <artifactId>jna</artifactId>
      <version>${cassandra.jna.version}</version>
    </dependency>

    <dependency>
      <groupId>net.java.dev.jna</groupId>
      <artifactId>platform</artifactId>
      <version>${cassandra.jna.version}</version>
    </dependency>

    <dependency>
      <groupId>com.googlecode.java-diff-utils</groupId>
      <artifactId>diffutils</artifactId>
      <version>1.2.1</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
      <resource>
        <directory>src/main/bundle</directory>
        <filtering>false</filtering>
      </resource>
    </resources>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <configuration>
          <resources>
            <resource>
              <directory>src/main/resources</directory>
              <filtering>true</filtering>
              <excludes>
                <exclude>src/main/resources/cassandra/conf/cassandra-env.sh</exclude>
              </excludes>
            </resource>
	    <resource>
        	<directory>src/main/bundle</directory>
        	<filtering>false</filtering>
      	    </resource>
          </resources>
          <delimiters>
            <delimiter>${*}</delimiter>
          </delimiters>
          <escapeString>[escape]</escapeString>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <dependencies>
          <dependency>
            <groupId>org.xerial.snappy</groupId>
            <artifactId>snappy-java</artifactId>
            <version>${cassandra.snappy.version}</version>
          </dependency>
          <dependency>
            <groupId>org.rhq</groupId>
            <artifactId>rhq-cassandra-auth</artifactId>
            <version>${rhq-cassandra-auth.version}</version>
          </dependency>
          <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty</artifactId>
            <version>${cassandra.driver.netty.version}</version>
          </dependency>
          <dependency>
            <groupId>org.apache.cassandra</groupId>
            <artifactId>apache-cassandra</artifactId>
            <version>${cassandra.version}</version>
            <type>tar.gz</type>
            <classifier>bin</classifier>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <!--
              This execution is a place holder or stub to do some pre-processing before
              packaging up the bundle. See the snappy-mac-workaround profile below for more
              details.
            -->
            <id>setup-pkg</id>
          </execution>
          <execution>
            <id>get-cassandra</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <property name="cassandra.download.dir"
                          value="${project.build.directory}/cassandra-download"/>
                <mkdir dir="${cassandra.download.dir}"/>
                <mkdir dir="${settings.localRepository}/org/apache/cassandra/apache-cassandra/${cassandra.version}"/>
                <gunzip src="${settings.localRepository}/org/apache/cassandra/apache-cassandra/${cassandra.version}/apache-cassandra-${cassandra.version}-bin.tar.gz"
                        dest="${cassandra.download.dir}"/>
                <untar src="${cassandra.download.dir}/apache-cassandra-${cassandra.version}-bin.tar"
                       dest="${cassandra.download.dir}"/>
                <move file="${cassandra.download.dir}/apache-cassandra-${cassandra.version}"
                      tofile="${project.build.outputDirectory}/cassandra-${cassandra.version}"/>
                <delete dir="${cassandra.download.dir}"/>
              </target>
            </configuration>
          </execution>
          <execution>
            <id>create-cassandra-pkg</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <property name="cassandra.dir"
                          value="${project.build.outputDirectory}/cassandra-${cassandra.version}"/>
                <property name="cassandra.distro.filename" value="cassandra.zip"/>
                <property name="cassandra.distro.zip"
                          value="${project.build.outputDirectory}/${cassandra.distro.filename}"/>
                <!-- see https://issues.apache.org/jira/browse/CASSANDRA-5955 -->
                <delete file="${cassandra.dir}/lib/netty-3.5.9.Final.jar"/>
                <copy file="${settings.localRepository}/io/netty/netty/${cassandra.driver.netty.version}/netty-${cassandra.driver.netty.version}.jar"
                      todir="${cassandra.dir}/lib"/>

                <property name="lz4.dir" value="${project.build.outputDirectory}/lz4"/>
                <mkdir dir="${lz4.dir}"/>
                <unzip src="${cassandra.dir}/lib/lz4-1.1.0.jar" dest="${lz4.dir}"/>
                <delete file="${cassandra.dir}/lib/lz4-1.1.0.jar"/>
                <delete dir="${lz4.dir}/darwin" failonerror="true"/>
                <delete dir="${lz4.dir}/linux" failonerror="true"/>
                <delete dir="${lz4.dir}/win32" failonerror="true"/>
                <jar destfile="${cassandra.dir}/lib/lz4-1.1.0.jar" basedir="${lz4.dir}" />
                <delete dir="${lz4.dir}"/>

                <delete file="${cassandra.dir}/lib/snappy-java-1.0.5.jar"/>
                <copy file="${settings.localRepository}/org/xerial/snappy/snappy-java/${cassandra.snappy.version}/snappy-java-${cassandra.snappy.version}.jar"
                      todir="${cassandra.dir}/lib"/>
                <copy file="${settings.localRepository}/org/rhq/rhq-cassandra-auth/${rhq-cassandra-auth.version}/rhq-cassandra-auth-${rhq-cassandra-auth.version}.jar"
                      todir="${cassandra.dir}/lib"/>
                <move file="${project.build.outputDirectory}/cassandra/conf" todir="${cassandra.dir}"/>
                <delete file="${cassandra.dir}/bin/cassandra"/>
                <move file="${project.build.outputDirectory}/cassandra/bin/cassandra" todir="${cassandra.dir}/bin"/>
                <delete file="${cassandra.dir}/bin/cassandra.in.sh"/>
                <move file="${project.build.outputDirectory}/cassandra/bin/cassandra.in.sh" todir="${cassandra.dir}/bin"/>
                <delete dir="${project.build.outputDirectory}/cassandra"/>
                <delete dir="${cassandra.dir}/javadoc"/>
                <delete file="${cassandra.dir}/conf/cassandra-env.sh"/>
                <touch file="${cassandra.dir}/conf/rhq-storage-auth.conf"/>

                <zip basedir="${cassandra.dir}" destfile="${cassandra.distro.zip}"/>
                <delete dir="${cassandra.dir}"/>
                <delete file="${project.build.outputDirectory}/deploy.xml"/>
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <excludes>
            <exclude>**/*ITest.java</exclude>
          </excludes>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>2.13</version>
        <executions>
          <execution>
            <id>integration-test</id>
            <goals>
              <goal>integration-test</goal>
            </goals>
            <configuration>
              <includes>
                <include>**/*ITest.java</include>
              </includes>
              <systemPropertyVariables>
                <rhq.storage.deploy-dir>${project.build.directory}/rhq-storage</rhq.storage.deploy-dir>
              </systemPropertyVariables>
            </configuration>
          </execution>
          <execution>
            <id>verify</id>
            <goals>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>dev</id>
      <properties>
        <rhq.rootDir>../../..</rhq.rootDir>
        <rhq.containerDir>${rhq.rootDir}/${rhq.devContainerServerPath}</rhq.containerDir>
        <rhq.deploymentDir>${rhq.containerDir}/${rhq.earLibDir}</rhq.deploymentDir>
      </properties>

      <build>
        <plugins>
          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <id>deploy</id>
                <phase>package</phase>
                <configuration>
                  <target>
                    <mkdir dir="${rhq.deploymentDir}"/>
                    <property name="deployment.file" location="${rhq.deploymentDir}/${project.build.finalName}.jar"/>
                    <echo>*** Updating ${deployment.file}...</echo>
                    <jar destfile="${deployment.file}" basedir="${project.build.outputDirectory}"/>
                  </target>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>

              <execution>
                <id>undeploy</id>
                <phase>clean</phase>
                <configuration>
                  <target>
                    <property name="deployment.file" location="${rhq.deploymentDir}/${project.build.finalName}.jar"/>
                    <echo>*** Deleting ${deployment.file}...</echo>
                    <delete file="${deployment.file}"/>
                  </target>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>

            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
